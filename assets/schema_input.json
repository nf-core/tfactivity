{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/tfactivity/master/assets/schema_input.json",
    "title": "nf-core/tfactivity pipeline - params.input schema",
    "description": "Schema for the file provided with params.input",
    "type": "array",
    "items": {
        "type": "object",
        "properties": {
            "sample": {
                "type": "string",
                "pattern": "^[a-zA-Z][a-zA-Z0-9]*(?:[-_][a-zA-Z0-9]+)*$",
                "errorMessage": "Sample name must be provided, has to start with a letter, and cannot contain spaces",
                "meta": ["id"]
            },
            "condition": {
                "type": "string",
                "pattern": "^[a-zA-Z][a-zA-Z0-9]*(?:[-_][a-zA-Z0-9]+)*$",
                "errorMessage": "Condition name must be provided, has to start with a letter, and cannot contain spaces",
                "meta": ["condition"]
            },
            "assay": {
                "type": "string",
                "pattern": "^[a-zA-Z][a-zA-Z0-9]*(?:[-_][a-zA-Z0-9]+)*$",
                "errorMessage": "Assay name must be provided, has to start with a letter, and cannot contain spaces",
                "meta": ["assay"]
            },
            "peak_file": {
                "type": "string",
                "format": "file-path",
                "exists": true,
                "pattern": "^\\S+\\.(bed|broadPeak)$",
                "errorMessage": "Peak file must be provided and must be a .bed or .broadPeak file"
            },
            "footprinting": {
                "type": "boolean",
                "default": true,
                "errorMessage": "footprinting must be a boolean value",
                "meta": ["footprinting"]
            },
            "include_original": {
                "type": "boolean",
                "default": true,
                "errorMessage": "include_original must be a boolean value",
                "meta": ["include_original"]
            },
            "max_peak_gap": {
                "type": "integer",
                "default": 500,
                "minimum": 0,
                "errorMessage": "max_peak_gap must be a positive integer",
                "meta": ["max_peak_gap"]
            }
        },
        "required": ["sample", "condition", "assay", "peak_file"]
    }
}
